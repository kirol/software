==================With UI==================
I'm a fan of LVM but I don't think it is required in this case - if all you want to do is to expand your sda1 filesystem to use the rest of the space on this drive. Assuming you don't at the moment have any data on your sda3, a better strategy is:

with fdisk it is hard to work out the actual sizes of the partitions, use swapon -s to show the size of your swap partition in K - and write this down
Reboot the virtual system with SystemRescueCD (or GParted Live) as a virtual CD, booting from the CD - press ESC at the very start of the boot process to select the boot device
if using SystemRescueCD then type startx at the end of the boot process to load the GUI and find GParted under the menu at System (GParted Live however will boot straight into GUI)
use GParted to remove logical partitions sda5 and sda3, and then the extended partition sda2
expand sda1 to fill most of the disk, leaving enough space at the end for your new swap partition which should be at least as big as your previous swap partition
after expanding sda1, create a new 'extended partition' in the rest of the drive, and after this is created, reselect it, and inside it create a new logical partition, and mark this partition as type 'linux-swap'
after you've selected these operations you then have to apply them (green check button), which is when they actually happen - this may take some time (but probably not)
reboot into Ubuntu and your root partition (/dev/sda1) now contains most of the drive and your swap partition is still at /dev/sda5 (albeit in a different location on the disk)
this doesn't use LVM at all. Did you need it?



==================Without UI==================
+ Add disk using vmware
+ Use gparted to create partition (e.g: sda3)
Create a new primary partition:
Run the command:

# fdisk /dev/sda (depending the results of the step 4)
Press p to print the partition table to identify the number of partitions. By default, there are 2: sda1 and sda2.
Press t to change the system's partition ID.
Press 3 to select the newly creation partition (sda3).
Type 8e to change the Hex Code of the partition for Linux LVM.
Press w to write the changes to the partition table.

Restart the virtual machine.
Run this command to verify that the changes were saved to the partition table and that the new partition has an 8e type:

# fdisk -l

Run this command to convert the new partition to a physical volume:

Note: The number for the sda can change depending on system setup. Use the sda number that was created in step 5.

# pvcreate /dev/sda3

Run this command to extend the physical volume:

# vgextend VolGroup00 /dev/sda3

Note: To determine which volume group to extend, use the command vgdisplay.

Run this command to verify how many physical extents are available to the Volume Group:

# vgdisplay VolGroup00 | grep "Free"

Run the following command to extend the Logical Volume:

# lvextend -L+#G /dev/VolGroup00/LogVol00

Where # is the number of Free space in GB available as per the previous command. Use the full number output from Step 10 including any decimals.

Note: To determine which logical volume to extend, use the command lvdisplay.

Run the following command to expand the ext3 filesystem online, inside of the Logical Volume:

# ext2online /dev/VolGroup00/LogVol00

Notes:
Use resize2fs instead of ext2online if it is not a Red Hat virtual machine.
By default, Red Hat and CentOS 7 use the XFS file system you can grow the file system by running the xfs_growfs command.

Run the following command to verify that the / filesystem has the new space available:

# df -h /



In Centos 7 default filesystem is xfs.

xfs file system support only extend not reduce. So if you want to resize the filesystem use xfs_growfs rather than resize2fs.

xfs_growfs /dev/root_vg/root 